{"ast":null,"code":"var _jsxFileName = \"/Users/asheesh/git/chatbot/client/src/components/ChatPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport ChatBar from './ChatBar';\nimport ChatBody from './ChatBody';\nimport ChatFooter from './ChatFooter';\nimport socketIO from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = socketIO.connect(\"http://localhost:4000\");\n\nconst ChatPage = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [typingStatus, setTypingStatus] = useState(\"\");\n  const lastMessageRef = useRef(null); // Call this function every time there's some change in messages or socket\n\n  useEffect(() => {\n    socket.on(\"messageResponse\", data => setMessages([...messages, data]));\n  }, [messages]);\n  useEffect(() => {\n    socket.on(\"messageReplicate\", data => setMessages([...messages, data]));\n  }, [messages]);\n  useEffect(() => {\n    socket.on(\"typingResponse\", data => setTypingStatus(data));\n  }, [socket]);\n  useEffect(() => {\n    var _lastMessageRef$curre;\n\n    // üëáÔ∏è scroll to bottom every time messages change\n    (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__main\",\n      children: [/*#__PURE__*/_jsxDEV(ChatBody, {\n        messages: messages,\n        typingStatus: typingStatus,\n        lastMessageRef: lastMessageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPage, \"cw7YB5549v6AGzJ3SLIF69YydAY=\");\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ChatBar","ChatBody","ChatFooter","socketIO","socket","connect","ChatPage","messages","setMessages","typingStatus","setTypingStatus","lastMessageRef","on","data","current","scrollIntoView","behavior"],"sources":["/Users/asheesh/git/chatbot/client/src/components/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef} from 'react'\nimport ChatBar from './ChatBar'\nimport ChatBody from './ChatBody'\nimport ChatFooter from './ChatFooter'\nimport socketIO from \"socket.io-client\";\nconst socket = socketIO.connect(\"http://localhost:4000\")\n\nconst ChatPage = () => {\n  const [messages, setMessages] = useState([])\n  const [typingStatus, setTypingStatus] = useState(\"\")\n  const lastMessageRef = useRef(null);\n    \n  // Call this function every time there's some change in messages or socket\n  useEffect(()=> {\n    socket.on(\"messageResponse\", data => setMessages([...messages, data]))\n  }, [messages])\n\n    useEffect(()=> {\n        socket.on(\"messageReplicate\", data => setMessages([...messages, data]))\n    }, [messages])\n\n    useEffect(()=> {\n    socket.on(\"typingResponse\", data => setTypingStatus(data))\n  }, [socket])\n\n  useEffect(() => {\n    // üëáÔ∏è scroll to bottom every time messages change\n    lastMessageRef.current?.scrollIntoView({behavior: 'smooth'});\n  }, [messages]);\n\n  return (\n\n    <div className=\"chat\">\n\n      <div className='chat__main'>\n        <ChatBody messages={messages} typingStatus={typingStatus} lastMessageRef={lastMessageRef}/>\n        <ChatFooter socket={socket}/>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatPage\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAkD,OAAlD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AACA,MAAMC,MAAM,GAAGD,QAAQ,CAACE,OAAT,CAAiB,uBAAjB,CAAf;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAMa,cAAc,GAAGZ,MAAM,CAAC,IAAD,CAA7B,CAHqB,CAKrB;;EACAF,SAAS,CAAC,MAAK;IACbO,MAAM,CAACQ,EAAP,CAAU,iBAAV,EAA6BC,IAAI,IAAIL,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcM,IAAd,CAAD,CAAhD;EACD,CAFQ,EAEN,CAACN,QAAD,CAFM,CAAT;EAIEV,SAAS,CAAC,MAAK;IACXO,MAAM,CAACQ,EAAP,CAAU,kBAAV,EAA8BC,IAAI,IAAIL,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcM,IAAd,CAAD,CAAjD;EACH,CAFQ,EAEN,CAACN,QAAD,CAFM,CAAT;EAIAV,SAAS,CAAC,MAAK;IACfO,MAAM,CAACQ,EAAP,CAAU,gBAAV,EAA4BC,IAAI,IAAIH,eAAe,CAACG,IAAD,CAAnD;EACD,CAFU,EAER,CAACT,MAAD,CAFQ,CAAT;EAIFP,SAAS,CAAC,MAAM;IAAA;;IACd;IACA,yBAAAc,cAAc,CAACG,OAAf,gFAAwBC,cAAxB,CAAuC;MAACC,QAAQ,EAAE;IAAX,CAAvC;EACD,CAHQ,EAGN,CAACT,QAAD,CAHM,CAAT;EAKA,oBAEE;IAAK,SAAS,EAAC,MAAf;IAAA,uBAEE;MAAK,SAAS,EAAC,YAAf;MAAA,wBACE,QAAC,QAAD;QAAU,QAAQ,EAAEA,QAApB;QAA8B,YAAY,EAAEE,YAA5C;QAA0D,cAAc,EAAEE;MAA1E;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QAAY,MAAM,EAAEP;MAApB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QAFF;AAUD,CAjCD;;GAAME,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}